{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let NavbarComponent = class NavbarComponent {\n  constructor(translate) {\n    this.translate = translate;\n    this.isNavbarCollapsed = true;\n    this.isSidebarVisible = false;\n    this.isDark = false;\n    this.translate.addLangs(['en', 'fr', 'de']);\n    this.translate.setDefaultLang('en');\n  }\n  ngOnInit() {\n    this.checkScreenSize();\n  }\n  onResize(event) {\n    this.checkScreenSize();\n  }\n  toggleSidebar() {\n    this.isSidebarVisible = !this.isSidebarVisible;\n  }\n  toggledark() {\n    this.isDark = !this.isDark;\n  }\n  checkScreenSize() {\n    this.isNavbarCollapsed = window.innerWidth <= 575;\n  }\n};\n__decorate([HostListener('window:resize', ['$event'])], NavbarComponent.prototype, \"onResize\", null);\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);","map":{"version":3,"names":["Component","HostListener","NavbarComponent","constructor","translate","isNavbarCollapsed","isSidebarVisible","isDark","addLangs","setDefaultLang","ngOnInit","checkScreenSize","onResize","event","toggleSidebar","toggledark","window","innerWidth","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\shared\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit{\n  isNavbarCollapsed: boolean = true;\n  isSidebarVisible : boolean = false;\n  isDark : boolean = false;\n  constructor(private translate: TranslateService) {\n    this.translate.addLangs(['en', 'fr', 'de']);\n    this.translate.setDefaultLang('en');\n  }\n  ngOnInit() {\n    this.checkScreenSize();\n  }\n  \n  @HostListener('window:resize', ['$event'])\n  onResize(event: Event) { \n    this.checkScreenSize();\n  }\n  toggleSidebar(){\n    this.isSidebarVisible  = !this.isSidebarVisible ;\n  }  \n  toggledark(){\n    this.isDark  = !this.isDark ;\n  }\n  checkScreenSize() {\n    this.isNavbarCollapsed = window.innerWidth <= 575;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAgB,eAAe;AAQxD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAI1BC,YAAoBC,SAA2B;IAA3B,KAAAA,SAAS,GAATA,SAAS;IAH7B,KAAAC,iBAAiB,GAAY,IAAI;IACjC,KAAAC,gBAAgB,GAAa,KAAK;IAClC,KAAAC,MAAM,GAAa,KAAK;IAEtB,IAAI,CAACH,SAAS,CAACI,QAAQ,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IAC3C,IAAI,CAACJ,SAAS,CAACK,cAAc,CAAC,IAAI,CAAC;EACrC;EACAC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EAGAC,QAAQA,CAACC,KAAY;IACnB,IAAI,CAACF,eAAe,EAAE;EACxB;EACAG,aAAaA,CAAA;IACX,IAAI,CAACR,gBAAgB,GAAI,CAAC,IAAI,CAACA,gBAAgB;EACjD;EACAS,UAAUA,CAAA;IACR,IAAI,CAACR,MAAM,GAAI,CAAC,IAAI,CAACA,MAAM;EAC7B;EACAI,eAAeA,CAAA;IACb,IAAI,CAACN,iBAAiB,GAAGW,MAAM,CAACC,UAAU,IAAI,GAAG;EACnD;CACD;AAZCC,UAAA,EADCjB,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,8CAGzC;AAfUC,eAAe,GAAAgB,UAAA,EAL3BlB,SAAS,CAAC;EACTmB,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWnB,eAAe,CAyB3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}