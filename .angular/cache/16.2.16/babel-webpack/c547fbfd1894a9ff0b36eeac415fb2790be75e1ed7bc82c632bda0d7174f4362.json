{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, authService, router) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.initializeLoginform();\n  }\n  // ********************************************************************** Login **********************************************************************\n  initializeLoginform() {\n    this.formLogin = this.formBuilder.group({\n      username: [''],\n      password: ['']\n    });\n  }\n  login() {\n    if (this.formLogin.valid) {\n      let username = this.formLogin.value.username;\n      let password = this.formLogin.value.password;\n      this.authService.Login(username, password).subscribe({\n        next: response => {\n          console.log(response);\n          this.authService.LoadProfile(response);\n          this.router;\n        },\n        error: err => {\n          console.error(err.error);\n        }\n      });\n    } else {\n      console.log(\"No data found\");\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","formBuilder","authService","router","ngOnInit","initializeLoginform","formLogin","group","username","password","login","valid","value","Login","subscribe","next","response","console","log","LoadProfile","error","err","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\dashboard\\login\\login.component.ts"],"sourcesContent":["import { AuthService } from './../../../services/auth/auth.service';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit{\n  formLogin!: FormGroup;\n\n  constructor(private formBuilder: FormBuilder, \n    private authService: AuthService,\n    private router ){ }\n  \n  ngOnInit(): void {\n   this.initializeLoginform();\n  }\n\n  // ********************************************************************** Login **********************************************************************\n  initializeLoginform(): void {\n    this.formLogin = this.formBuilder.group({\n      username: [''],\n      password: ['']\n    });\n  }\n\n  login(){\n    if(this.formLogin.valid){\n      let username = this.formLogin.value.username;\n      let password = this.formLogin.value.password;\n      this.authService.Login(username, password).subscribe({\n        next: (response : any)=> {\n          console.log(response)\n          this.authService.LoadProfile(response);\n          this.router\n        },\n        error: (err)=>{\n          console.error(err.error)\n        }\n      })\n    } else{\n      console.log(\"No data found\")\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAGzBC,YAAoBC,WAAwB,EAClCC,WAAwB,EACxBC,MAAM;IAFI,KAAAF,WAAW,GAAXA,WAAW;IACrB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;EAAI;EAEpBC,QAAQA,CAAA;IACP,IAAI,CAACC,mBAAmB,EAAE;EAC3B;EAEA;EACAA,mBAAmBA,CAAA;IACjB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACtCC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAEAC,KAAKA,CAAA;IACH,IAAG,IAAI,CAACJ,SAAS,CAACK,KAAK,EAAC;MACtB,IAAIH,QAAQ,GAAG,IAAI,CAACF,SAAS,CAACM,KAAK,CAACJ,QAAQ;MAC5C,IAAIC,QAAQ,GAAG,IAAI,CAACH,SAAS,CAACM,KAAK,CAACH,QAAQ;MAC5C,IAAI,CAACP,WAAW,CAACW,KAAK,CAACL,QAAQ,EAAEC,QAAQ,CAAC,CAACK,SAAS,CAAC;QACnDC,IAAI,EAAGC,QAAc,IAAG;UACtBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;UACrB,IAAI,CAACd,WAAW,CAACiB,WAAW,CAACH,QAAQ,CAAC;UACtC,IAAI,CAACb,MAAM;QACb,CAAC;QACDiB,KAAK,EAAGC,GAAG,IAAG;UACZJ,OAAO,CAACG,KAAK,CAACC,GAAG,CAACD,KAAK,CAAC;QAC1B;OACD,CAAC;KACH,MAAK;MACJH,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;;EAEhC;CACD;AArCYnB,cAAc,GAAAuB,UAAA,EAL1BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,uBAAuB;CACpC,CAAC,C,EACW1B,cAAc,CAqC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}