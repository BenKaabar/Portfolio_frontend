{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'Portfolio';\n    this.isDarkMode = false;\n  }\n  ngOnInit() {\n    // Check for dark mode preference in localStorage\n    const darkModeStatus = localStorage.getItem('darkMode');\n    console.log('Dark Mode from localStorage:', darkModeStatus); // <-- Log inside ngOnInit\n    this.isDarkMode = darkModeStatus === 'enabled';\n    this.updateDarkMode();\n  }\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode ? 'enabled' : 'disabled');\n    this.updateDarkMode();\n  }\n  updateDarkMode() {\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 1,\n      vars: 0,\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"router-outlet\");\n        }\n      },\n      dependencies: [i1.RouterOutlet],\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLDRKQUE0SiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AppComponent","constructor","title","isDarkMode","ngOnInit","darkModeStatus","localStorage","getItem","console","log","updateDarkMode","toggleDarkMode","setItem","document","body","classList","add","remove","selectors","decls","vars","template","AppComponent_Template","rf","ctx","i0","ɵɵelement"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\app.component.ts","C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  \n  title = 'Portfolio';\n  isDarkMode = false;\n\n  ngOnInit() {\n    // Check for dark mode preference in localStorage\n    const darkModeStatus = localStorage.getItem('darkMode');\n    console.log('Dark Mode from localStorage:', darkModeStatus); // <-- Log inside ngOnInit\n    this.isDarkMode = darkModeStatus === 'enabled';\n    this.updateDarkMode();\n  }\n  \n\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode ? 'enabled' : 'disabled');\n    this.updateDarkMode();\n  }\n\n  updateDarkMode() {\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n}\n","<router-outlet></router-outlet>"],"mappings":";;AAOA,OAAM,MAAOA,YAAY;EALzBC,YAAA;IAOE,KAAAC,KAAK,GAAG,WAAW;IACnB,KAAAC,UAAU,GAAG,KAAK;;EAElBC,QAAQA,CAAA;IACN;IACA,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvDC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEJ,cAAc,CAAC,CAAC,CAAC;IAC7D,IAAI,CAACF,UAAU,GAAGE,cAAc,KAAK,SAAS;IAC9C,IAAI,CAACK,cAAc,EAAE;EACvB;EAGAC,cAAcA,CAAA;IACZ,IAAI,CAACR,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClCG,YAAY,CAACM,OAAO,CAAC,UAAU,EAAE,IAAI,CAACT,UAAU,GAAG,SAAS,GAAG,UAAU,CAAC;IAC1E,IAAI,CAACO,cAAc,EAAE;EACvB;EAEAA,cAAcA,CAAA;IACZ,IAAI,IAAI,CAACP,UAAU,EAAE;MACnBU,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;KACzC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;EAE/C;;;uBA1BWjB,YAAY;IAAA;EAAA;;;YAAZA,YAAY;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCPzBE,EAAA,CAAAC,SAAA,oBAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}