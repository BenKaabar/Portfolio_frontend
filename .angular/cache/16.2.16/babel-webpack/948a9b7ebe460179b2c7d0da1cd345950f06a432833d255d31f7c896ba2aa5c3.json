{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WorkService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:2603/Work';\n  }\n  AllWorks() {\n    return this.http.get(`${this.apiUrl}/AllWork`);\n  }\n  deleteWork(idWork) {\n    return this.http.delete(`${this.apiUrl}/DeleteWork/${idWork}`, {\n      responseType: 'text'\n    });\n  }\n  addEmployer(formData) {\n    return this.http.post(`${this.apiUrl}/addEmployer`, formData, {\n      responseType: 'text'\n    });\n  }\n  static {\n    this.ɵfac = function WorkService_Factory(t) {\n      return new (t || WorkService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WorkService,\n      factory: WorkService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["WorkService","constructor","http","apiUrl","AllWorks","get","deleteWork","idWork","delete","responseType","addEmployer","formData","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\services\\Work\\work.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Work } from 'src/app/models/work';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkService {\n private apiUrl = 'http://localhost:2603/Work';\n\n  constructor(private http:HttpClient) { }\n\n  AllWorks():Observable<Work[]>{\n    return this.http.get<Work[]>(`${this.apiUrl}/AllWork`);\n  }\n  deleteWork(idWork: string):Observable<string>{\n    return this.http.delete(`${this.apiUrl}/DeleteWork/${idWork}`, {\n      responseType: 'text'\n    });\n  }\n  addEmployer(formData: FormData):Observable<string>{\n    return this.http.post(`${this.apiUrl}/addEmployer`, formData,{\n      responseType: 'text'\n    });\n  }\n}\n"],"mappings":";;AAQA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFjB,KAAAC,MAAM,GAAG,4BAA4B;EAEL;EAEvCC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,UAAU,CAAC;EACxD;EACAG,UAAUA,CAACC,MAAc;IACvB,OAAO,IAAI,CAACL,IAAI,CAACM,MAAM,CAAC,GAAG,IAAI,CAACL,MAAM,eAAeI,MAAM,EAAE,EAAE;MAC7DE,YAAY,EAAE;KACf,CAAC;EACJ;EACAC,WAAWA,CAACC,QAAkB;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,MAAM,cAAc,EAAEQ,QAAQ,EAAC;MAC3DF,YAAY,EAAE;KACf,CAAC;EACJ;;;uBAjBWT,WAAW,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAXhB,WAAW;MAAAiB,OAAA,EAAXjB,WAAW,CAAAkB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}