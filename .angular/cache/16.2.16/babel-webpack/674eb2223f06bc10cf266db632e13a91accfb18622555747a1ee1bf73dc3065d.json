{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { jwtDecode } from 'jwt-decode';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AuthService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.apiUrl = 'http://localhost:2603/Auth';\n    this.isAuthenticated = new BehaviorSubject(\"false\");\n    this.isAuthenticated$ = this.isAuthenticated.asObservable();\n    this.role = new BehaviorSubject(\"\");\n    this.role$ = this.role.asObservable();\n    this.username = new BehaviorSubject(\"\");\n    this.username$ = this.username.asObservable();\n    this.accessToken = new BehaviorSubject(\"\");\n    this.accessToken$ = this.accessToken.asObservable();\n  }\n  Login(username, password) {\n    let options = {\n      headers: new HttpHeaders().set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n    };\n    let params = new HttpParams().set(\"username\", username).set(\"password\", password);\n    return this.http.post(`${this.apiUrl}/login`, params, options);\n  }\n  loadProfile(data) {\n    const newisAuthenticated = \"true\";\n    localStorage.setItem(\"isAuthenticated\", newisAuthenticated);\n    this.isAuthenticated.next(newisAuthenticated);\n    const newisaccessToken = data['acces-token'];\n    localStorage.setItem(\"accestoken\", newisaccessToken);\n    this.accessToken.next(newisaccessToken);\n    let decodedJwt = jwtDecode(newisaccessToken);\n    const newusername = decodedJwt.sub;\n    const id = decodedJwt.sub;\n    localStorage.setItem(\"username\", newusername);\n    this.username.next(newusername);\n    const newrole = decodedJwt.scope;\n    localStorage.setItem(\"role\", newrole);\n    this.role.next(newrole);\n    this.router.navigateByUrl(\"accueil\");\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpHeaders","HttpParams","jwtDecode","BehaviorSubject","AuthService","constructor","http","router","apiUrl","isAuthenticated","isAuthenticated$","asObservable","role","role$","username","username$","accessToken","accessToken$","Login","password","options","headers","set","params","post","loadProfile","data","newisAuthenticated","localStorage","setItem","next","newisaccessToken","decodedJwt","newusername","sub","id","newrole","scope","navigateByUrl","i0","ɵɵinject","i1","HttpClient","i2","Router","factory","ɵfac","providedIn"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\services\\auth\\auth.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { jwtDecode } from 'jwt-decode';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  private apiUrl = 'http://localhost:2603/Auth';\n  \n  private isAuthenticated = new BehaviorSubject<String>(\"false\");\n  isAuthenticated$ = this.isAuthenticated.asObservable();\n\n  private role = new BehaviorSubject<String>(\"\");\n  role$ = this.role.asObservable();\n\n  private username = new BehaviorSubject<string>(\"\");\n  username$ = this.username.asObservable();\n\n  private accessToken = new BehaviorSubject<string>(\"\");\n  accessToken$ = this.accessToken.asObservable();\n\n  constructor(private http:HttpClient, private router: Router) { }\n\n  Login(username: string,password: string){\n    let options = {\n      headers : new HttpHeaders().set(\"Content-Type\",\"application/x-www-form-urlencoded\")\n    }\n    let params = new HttpParams()\n      .set(\"username\", username)\n      .set(\"password\", password);\n    return this.http.post(`${this.apiUrl}/login`,params, options);\n  }\n  \n  public loadProfile(data: any) {\n    const newisAuthenticated = \"true\";\n    localStorage.setItem(\"isAuthenticated\",newisAuthenticated)\n    this.isAuthenticated.next(newisAuthenticated);\n\n    const newisaccessToken = data['acces-token'];\n    localStorage.setItem(\"accestoken\",newisaccessToken)\n    this.accessToken.next(newisaccessToken);\n\n    let decodedJwt: any = jwtDecode(newisaccessToken);\n\n    const newusername = decodedJwt.sub;\n    const id=decodedJwt.sub;\n    localStorage.setItem(\"username\",newusername)\n    this.username.next(newusername);\n\n    const newrole = decodedJwt.scope;\n    localStorage.setItem(\"role\",newrole)\n    this.role.next(newrole);\n    this.router.navigateByUrl(\"accueil\")\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAG1E,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,eAAe,QAAQ,MAAM;;;;AAKtC,OAAM,MAAOC,WAAW;EAetBC,YAAoBC,IAAe,EAAUC,MAAc;IAAvC,KAAAD,IAAI,GAAJA,IAAI;IAAqB,KAAAC,MAAM,GAANA,MAAM;IAd3C,KAAAC,MAAM,GAAG,4BAA4B;IAErC,KAAAC,eAAe,GAAG,IAAIN,eAAe,CAAS,OAAO,CAAC;IAC9D,KAAAO,gBAAgB,GAAG,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;IAE9C,KAAAC,IAAI,GAAG,IAAIT,eAAe,CAAS,EAAE,CAAC;IAC9C,KAAAU,KAAK,GAAG,IAAI,CAACD,IAAI,CAACD,YAAY,EAAE;IAExB,KAAAG,QAAQ,GAAG,IAAIX,eAAe,CAAS,EAAE,CAAC;IAClD,KAAAY,SAAS,GAAG,IAAI,CAACD,QAAQ,CAACH,YAAY,EAAE;IAEhC,KAAAK,WAAW,GAAG,IAAIb,eAAe,CAAS,EAAE,CAAC;IACrD,KAAAc,YAAY,GAAG,IAAI,CAACD,WAAW,CAACL,YAAY,EAAE;EAEiB;EAE/DO,KAAKA,CAACJ,QAAgB,EAACK,QAAgB;IACrC,IAAIC,OAAO,GAAG;MACZC,OAAO,EAAG,IAAIrB,WAAW,EAAE,CAACsB,GAAG,CAAC,cAAc,EAAC,mCAAmC;KACnF;IACD,IAAIC,MAAM,GAAG,IAAItB,UAAU,EAAE,CAC1BqB,GAAG,CAAC,UAAU,EAAER,QAAQ,CAAC,CACzBQ,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;IAC5B,OAAO,IAAI,CAACb,IAAI,CAACkB,IAAI,CAAC,GAAG,IAAI,CAAChB,MAAM,QAAQ,EAACe,MAAM,EAAEH,OAAO,CAAC;EAC/D;EAEOK,WAAWA,CAACC,IAAS;IAC1B,MAAMC,kBAAkB,GAAG,MAAM;IACjCC,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAACF,kBAAkB,CAAC;IAC1D,IAAI,CAAClB,eAAe,CAACqB,IAAI,CAACH,kBAAkB,CAAC;IAE7C,MAAMI,gBAAgB,GAAGL,IAAI,CAAC,aAAa,CAAC;IAC5CE,YAAY,CAACC,OAAO,CAAC,YAAY,EAACE,gBAAgB,CAAC;IACnD,IAAI,CAACf,WAAW,CAACc,IAAI,CAACC,gBAAgB,CAAC;IAEvC,IAAIC,UAAU,GAAQ9B,SAAS,CAAC6B,gBAAgB,CAAC;IAEjD,MAAME,WAAW,GAAGD,UAAU,CAACE,GAAG;IAClC,MAAMC,EAAE,GAACH,UAAU,CAACE,GAAG;IACvBN,YAAY,CAACC,OAAO,CAAC,UAAU,EAACI,WAAW,CAAC;IAC5C,IAAI,CAACnB,QAAQ,CAACgB,IAAI,CAACG,WAAW,CAAC;IAE/B,MAAMG,OAAO,GAAGJ,UAAU,CAACK,KAAK;IAChCT,YAAY,CAACC,OAAO,CAAC,MAAM,EAACO,OAAO,CAAC;IACpC,IAAI,CAACxB,IAAI,CAACkB,IAAI,CAACM,OAAO,CAAC;IACvB,IAAI,CAAC7B,MAAM,CAAC+B,aAAa,CAAC,SAAS,CAAC;EACtC;;;uBA/CWlC,WAAW,EAAAmC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAXxC,WAAW;MAAAyC,OAAA,EAAXzC,WAAW,CAAA0C,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}