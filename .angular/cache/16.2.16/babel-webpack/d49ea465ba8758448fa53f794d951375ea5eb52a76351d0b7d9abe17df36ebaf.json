{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WorkComponent = class WorkComponent {\n  constructor(workService, router) {\n    this.workService = workService;\n    this.router = router;\n    this.allWorks = [];\n    this.selectedWork = null;\n    this.page = 1;\n    this.itemsPerPage = 1;\n    this.isLoading = true;\n  }\n  ngOnInit() {\n    console.log(\"Component initialized, loading:\", this.isLoading);\n    this.getallWorks();\n  }\n  // ********************************************************************** Display Work **********************************************************************\n  getallWorks() {\n    this.workService.AllWorks().subscribe({\n      next: response => {\n        this.allWorks = response.map(work => ({\n          ...work\n        }));\n        setTimeout(() => {\n          this.isLoading = false;\n          console.log(\"Data loaded, hiding skeleton.\" + this.isLoading);\n        }, 2000);\n      },\n      error: error => {\n        console.error(\"Erreur lors de la récupération des travaux :\", error);\n        this.isLoading = false;\n      }\n    });\n  }\n  // getallWorks() {\n  //   this.workService.AllWorks().subscribe({\n  //     next: (response) => {\n  //       this.isLoading = true;\n  //       this.allWorks = response.map(work => ({\n  //           ...work\n  //         }),\n  //         setTimeout(() => {\n  //           this.isLoading = false;\n  //         }, 2000)\n  //       );\n  //     }\n  //   });\n  // }\n  //  ********************************************************************** Work Detail **********************************************************************\n  goToWorkDetail(work) {\n    this.router.navigateByUrl('/WorkDetail', {\n      state: {\n        work\n      }\n    });\n  }\n  //  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks() {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWorks.slice(startIndex, endIndex);\n  }\n  get totalPages() {\n    return Math.ceil(this.allWorks.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled() {\n    return this.page === 1;\n  }\n  get isNextPageDisabled() {\n    return this.page === this.totalPages;\n  }\n  goToNextPage() {\n    this.page++;\n  }\n  goToPreviousPage() {\n    this.page--;\n  }\n};\nWorkComponent = __decorate([Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})], WorkComponent);","map":{"version":3,"names":["Component","WorkComponent","constructor","workService","router","allWorks","selectedWork","page","itemsPerPage","isLoading","ngOnInit","console","log","getallWorks","AllWorks","subscribe","next","response","map","work","setTimeout","error","goToWorkDetail","navigateByUrl","state","paginatedWorks","startIndex","endIndex","slice","totalPages","Math","ceil","length","isPreviousPageDisabled","isNextPageDisabled","goToNextPage","goToPreviousPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\work\\work.component.ts"],"sourcesContent":["import { Component, OnInit, Injectable } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Work } from 'src/app/models/work';\nimport { WorkService } from 'src/app/services/Work/work.service';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})\nexport class WorkComponent implements OnInit{\n  allWorks: Work[] = [];\n  selectedWork: Work | null = null;\n  page: number = 1;\n  itemsPerPage: number = 1;\n  isLoading = true;\n\n  constructor(private workService: WorkService, \n    private router: Router){ }\n\n  ngOnInit(): void { \n    console.log(\"Component initialized, loading:\", this.isLoading);\n    this.getallWorks();\n  }\n\n// ********************************************************************** Display Work **********************************************************************\n\n  getallWorks() {\n    this.workService.AllWorks().subscribe({\n      next: (response) => {\n        this.allWorks = response.map(work => ({ ...work }));\n  \n        setTimeout(() => {\n          this.isLoading = false;\n          console.log(\"Data loaded, hiding skeleton.\" + this.isLoading);\n        }, 2000);\n      },\n      error: (error) => {\n        console.error(\"Erreur lors de la récupération des travaux :\", error);\n        this.isLoading = false;\n      }\n    });\n  }\n\n    // getallWorks() {\n  //   this.workService.AllWorks().subscribe({\n  //     next: (response) => {\n  //       this.isLoading = true;\n  //       this.allWorks = response.map(work => ({\n  //           ...work\n  //         }),\n  //         setTimeout(() => {\n  //           this.isLoading = false;\n  //         }, 2000)\n  //       );\n  //     }\n  //   });\n  // }\n\n//  ********************************************************************** Work Detail **********************************************************************\n  goToWorkDetail(work: Work): void {\n    this.router.navigateByUrl('/WorkDetail', { state: { work } });\n  }\n\n//  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks(): Work[] {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWorks.slice(startIndex, endIndex);\n  }\n  get totalPages(): number {\n    return Math.ceil(this.allWorks.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled(): boolean {\n    return this.page === 1;\n  }\n  get isNextPageDisabled(): boolean {\n    return this.page === this.totalPages;\n  }\n  goToNextPage(): void {\n      this.page++;\n  }\n  goToPreviousPage(): void {\n      this.page--;\n  }\n\n}"],"mappings":";AAAA,SAASA,SAAS,QAA4B,eAAe;AAWtD,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAOxBC,YAAoBC,WAAwB,EAClCC,MAAc;IADJ,KAAAD,WAAW,GAAXA,WAAW;IACrB,KAAAC,MAAM,GAANA,MAAM;IAPhB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAgB,IAAI;IAChC,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,SAAS,GAAG,IAAI;EAGW;EAE3BC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE,IAAI,CAACH,SAAS,CAAC;IAC9D,IAAI,CAACI,WAAW,EAAE;EACpB;EAEF;EAEEA,WAAWA,CAAA;IACT,IAAI,CAACV,WAAW,CAACW,QAAQ,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACZ,QAAQ,GAAGY,QAAQ,CAACC,GAAG,CAACC,IAAI,KAAK;UAAE,GAAGA;QAAI,CAAE,CAAC,CAAC;QAEnDC,UAAU,CAAC,MAAK;UACd,IAAI,CAACX,SAAS,GAAG,KAAK;UACtBE,OAAO,CAACC,GAAG,CAAC,+BAA+B,GAAG,IAAI,CAACH,SAAS,CAAC;QAC/D,CAAC,EAAE,IAAI,CAAC;MACV,CAAC;MACDY,KAAK,EAAGA,KAAK,IAAI;QACfV,OAAO,CAACU,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACpE,IAAI,CAACZ,SAAS,GAAG,KAAK;MACxB;KACD,CAAC;EACJ;EAEE;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEF;EACEa,cAAcA,CAACH,IAAU;IACvB,IAAI,CAACf,MAAM,CAACmB,aAAa,CAAC,aAAa,EAAE;MAAEC,KAAK,EAAE;QAAEL;MAAI;IAAE,CAAE,CAAC;EAC/D;EAEF;EACE,IAAIM,cAAcA,CAAA;IAChB,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACnB,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,YAAY;IACtD,MAAMmB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAAClB,YAAY;IAC/C,OAAO,IAAI,CAACH,QAAQ,CAACuB,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EAClD;EACA,IAAIE,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC1B,QAAQ,CAAC2B,MAAM,GAAG,IAAI,CAACxB,YAAY,CAAC;EAC5D;EACA,IAAIyB,sBAAsBA,CAAA;IACxB,OAAO,IAAI,CAAC1B,IAAI,KAAK,CAAC;EACxB;EACA,IAAI2B,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAAC3B,IAAI,KAAK,IAAI,CAACsB,UAAU;EACtC;EACAM,YAAYA,CAAA;IACR,IAAI,CAAC5B,IAAI,EAAE;EACf;EACA6B,gBAAgBA,CAAA;IACZ,IAAI,CAAC7B,IAAI,EAAE;EACf;CAED;AA5EYN,aAAa,GAAAoC,UAAA,EALzBrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWvC,aAAa,CA4EzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}