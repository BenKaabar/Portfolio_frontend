{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardWorkComponent = class DashboardWorkComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.page = 1;\n    this.itemsPerPage = 5;\n    this.allContact = [];\n    this.selectedContact = null;\n    this.isModalOpen = false;\n  }\n  ngOnInit() {\n    this.getAllContact();\n  }\n  // ********************************************************************** Display Fournisseur **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: response => {\n        this.allContact = response;\n      }\n    });\n  }\n  //  ********************************************************************** Consulting **********************************************************************\n  openModal(contact) {\n    console.log(contact);\n    this.selectedContact = contact;\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n  }\n  //  ********************************************************************** delete **********************************************************************\n  toDelete(idContact) {\n    this.contactService.deleteContact(idContact).subscribe({\n      next: response => {\n        this.allContact = this.allContact.filter(contact => contact.idContact !== idContact);\n        this.getAllContact();\n      }\n    });\n  }\n  //  ********************************************************************** Pagination **********************************************************************\n  get paginatedContacts() {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allContact.slice(startIndex, endIndex);\n  }\n  get totalPages() {\n    return Math.ceil(this.allContact.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled() {\n    return this.page === 1;\n  }\n  get isNextPageDisabled() {\n    return this.page === this.totalPages;\n  }\n  goToNextPage() {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage() {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n};\nDashboardWorkComponent = __decorate([Component({\n  selector: 'app-dashboard-work',\n  templateUrl: './dashboard-work.component.html',\n  styleUrls: ['./dashboard-work.component.css']\n})], DashboardWorkComponent);","map":{"version":3,"names":["Component","DashboardWorkComponent","constructor","contactService","page","itemsPerPage","allContact","selectedContact","isModalOpen","ngOnInit","getAllContact","AllContact","subscribe","next","response","openModal","contact","console","log","closeModal","toDelete","idContact","deleteContact","filter","paginatedContacts","startIndex","endIndex","slice","totalPages","Math","ceil","length","isPreviousPageDisabled","isNextPageDisabled","goToNextPage","goToPreviousPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\dashboard\\dashboard-work\\dashboard-work.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-work',\n  templateUrl: './dashboard-work.component.html',\n  styleUrls: ['./dashboard-work.component.css']\n})\nexport class DashboardWorkComponent  implements OnInit{\n  page: number = 1;\n  itemsPerPage: number = 5;\n  allContact: Contact[] = [];\n  selectedContact:Contact | null = null;\n  isModalOpen = false;\n\n  constructor(private contactService: ContactService){}\n  \n  ngOnInit(): void {\n    this.getAllContact();\n  }\n\n// ********************************************************************** Display Fournisseur **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: (response)=>{\n        this.allContact = response;\n      },\n    })\n  }\n\n//  ********************************************************************** Consulting **********************************************************************\n  openModal(contact: Contact) {\n    console.log(contact)\n    this.selectedContact = contact;\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n//  ********************************************************************** delete **********************************************************************\n  toDelete(idContact: string): void{\n    this.contactService.deleteContact(idContact).subscribe({\n      next:(response)=>{\n        this.allContact = this.allContact.filter(contact => contact.idContact !== idContact);\n        this.getAllContact();\n      },\n    });\n  }\n  \n//  ********************************************************************** Pagination **********************************************************************\n  get paginatedContacts(): Contact[] {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allContact.slice(startIndex, endIndex);\n  }\n  get totalPages(): number {\n    return Math.ceil(this.allContact.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled(): boolean {\n    return this.page === 1;\n  }\n  get isNextPageDisabled(): boolean {\n    return this.page === this.totalPages;\n  }\n  goToNextPage(): void {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage(): void {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAO1C,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAOjCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,UAAU,GAAc,EAAE;IAC1B,KAAAC,eAAe,GAAkB,IAAI;IACrC,KAAAC,WAAW,GAAG,KAAK;EAEiC;EAEpDC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEF;EACEA,aAAaA,CAAA;IACX,IAAI,CAACP,cAAc,CAACQ,UAAU,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAQ,IAAG;QAChB,IAAI,CAACR,UAAU,GAAGQ,QAAQ;MAC5B;KACD,CAAC;EACJ;EAEF;EACEC,SAASA,CAACC,OAAgB;IACxBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,IAAI,CAACT,eAAe,GAAGS,OAAO;IAC9B,IAAI,CAACR,WAAW,GAAG,IAAI;EACzB;EAEAW,UAAUA,CAAA;IACR,IAAI,CAACX,WAAW,GAAG,KAAK;EAC1B;EAEF;EACEY,QAAQA,CAACC,SAAiB;IACxB,IAAI,CAAClB,cAAc,CAACmB,aAAa,CAACD,SAAS,CAAC,CAACT,SAAS,CAAC;MACrDC,IAAI,EAAEC,QAAQ,IAAG;QACf,IAAI,CAACR,UAAU,GAAG,IAAI,CAACA,UAAU,CAACiB,MAAM,CAACP,OAAO,IAAIA,OAAO,CAACK,SAAS,KAAKA,SAAS,CAAC;QACpF,IAAI,CAACX,aAAa,EAAE;MACtB;KACD,CAAC;EACJ;EAEF;EACE,IAAIc,iBAAiBA,CAAA;IACnB,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACrB,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,YAAY;IACtD,MAAMqB,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACpB,YAAY;IAC/C,OAAO,IAAI,CAACC,UAAU,CAACqB,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EACpD;EACA,IAAIE,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACxB,UAAU,CAACyB,MAAM,GAAG,IAAI,CAAC1B,YAAY,CAAC;EAC9D;EACA,IAAI2B,sBAAsBA,CAAA;IACxB,OAAO,IAAI,CAAC5B,IAAI,KAAK,CAAC;EACxB;EACA,IAAI6B,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAAC7B,IAAI,KAAK,IAAI,CAACwB,UAAU;EACtC;EACAM,YAAYA,CAAA;IACV,IAAI,IAAI,CAAC9B,IAAI,GAAG,IAAI,CAACwB,UAAU,EAAE;MAC/B,IAAI,CAACxB,IAAI,EAAE;;EAEf;EACA+B,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAAC/B,IAAI,GAAG,CAAC,EAAE;MACjB,IAAI,CAACA,IAAI,EAAE;;EAEf;CACD;AApEYH,sBAAsB,GAAAmC,UAAA,EALlCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWtC,sBAAsB,CAoElC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}