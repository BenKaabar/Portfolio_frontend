{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardContactComponent = class DashboardContactComponent {\n  constructor(contactService, authService, router) {\n    this.contactService = contactService;\n    this.authService = authService;\n    this.router = router;\n    this.allContact = [];\n    this.selectedContact = null;\n    this.isModalOpen = false;\n  }\n  ngOnInit() {\n    this.getAllContact();\n  }\n  // ********************************************************************** Display Contact **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: response => {\n        this.allContact = response;\n      }\n    });\n  }\n  //  ********************************************************************** Consulting **********************************************************************\n  openModal(contact) {\n    console.log(contact);\n    this.selectedContact = contact;\n    this.isModalOpen = true;\n  }\n  closeModal() {\n    this.isModalOpen = false;\n  }\n  //  ********************************************************************** delete **********************************************************************\n  toDelete(idContact) {\n    this.contactService.deleteContact(idContact).subscribe({\n      next: response => {\n        this.allContact = this.allContact.filter(contact => contact.idContact !== idContact);\n        this.getAllContact();\n      }\n    });\n  }\n};\nDashboardContactComponent = __decorate([Component({\n  selector: 'app-dashboard-contact',\n  templateUrl: './dashboard-contact.component.html',\n  styleUrls: ['./dashboard-contact.component.css']\n})], DashboardContactComponent);","map":{"version":3,"names":["Component","DashboardContactComponent","constructor","contactService","authService","router","allContact","selectedContact","isModalOpen","ngOnInit","getAllContact","AllContact","subscribe","next","response","openModal","contact","console","log","closeModal","toDelete","idContact","deleteContact","filter","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\dashboard\\dashboard-contact\\dashboard-contact.component.ts"],"sourcesContent":["import { ContactService } from './../../../services/Contact/contact.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Contact } from 'src/app/models/Contact';\n\n@Component({\n  selector: 'app-dashboard-contact',\n  templateUrl: './dashboard-contact.component.html',\n  styleUrls: ['./dashboard-contact.component.css']\n})\nexport class DashboardContactComponent implements OnInit{\n  allContact: Contact[] = [];\n  selectedContact:Contact | null = null;\n  isModalOpen = false;\n\n  constructor(private contactService: ContactService,\n           private authService: AuthService,\n           private router: Router){}\n  \n  ngOnInit(): void {\n    this.getAllContact();\n  }\n\n// ********************************************************************** Display Contact **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: (response)=>{\n        this.allContact = response;\n      },\n    })\n  }\n\n//  ********************************************************************** Consulting **********************************************************************\n  openModal(contact: Contact) {\n    console.log(contact)\n    this.selectedContact = contact;\n    this.isModalOpen = true;\n  }\n\n  closeModal() {\n    this.isModalOpen = false;\n  }\n\n//  ********************************************************************** delete **********************************************************************\n  toDelete(idContact: string): void{\n    this.contactService.deleteContact(idContact).subscribe({\n      next:(response)=>{\n        this.allContact = this.allContact.filter(contact => contact.idContact !== idContact);\n        this.getAllContact();\n      },\n    });\n  }\n  \n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAKpCC,YAAoBC,cAA8B,EACjCC,WAAwB,EACxBC,MAAc;IAFX,KAAAF,cAAc,GAAdA,cAAc;IACjB,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IANvB,KAAAC,UAAU,GAAc,EAAE;IAC1B,KAAAC,eAAe,GAAkB,IAAI;IACrC,KAAAC,WAAW,GAAG,KAAK;EAIc;EAEjCC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEF;EACEA,aAAaA,CAAA;IACX,IAAI,CAACP,cAAc,CAACQ,UAAU,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAQ,IAAG;QAChB,IAAI,CAACR,UAAU,GAAGQ,QAAQ;MAC5B;KACD,CAAC;EACJ;EAEF;EACEC,SAASA,CAACC,OAAgB;IACxBC,OAAO,CAACC,GAAG,CAACF,OAAO,CAAC;IACpB,IAAI,CAACT,eAAe,GAAGS,OAAO;IAC9B,IAAI,CAACR,WAAW,GAAG,IAAI;EACzB;EAEAW,UAAUA,CAAA;IACR,IAAI,CAACX,WAAW,GAAG,KAAK;EAC1B;EAEF;EACEY,QAAQA,CAACC,SAAiB;IACxB,IAAI,CAAClB,cAAc,CAACmB,aAAa,CAACD,SAAS,CAAC,CAACT,SAAS,CAAC;MACrDC,IAAI,EAAEC,QAAQ,IAAG;QACf,IAAI,CAACR,UAAU,GAAG,IAAI,CAACA,UAAU,CAACiB,MAAM,CAACP,OAAO,IAAIA,OAAO,CAACK,SAAS,KAAKA,SAAS,CAAC;QACpF,IAAI,CAACX,aAAa,EAAE;MACtB;KACD,CAAC;EACJ;CAED;AA3CYT,yBAAyB,GAAAuB,UAAA,EALrCxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACW1B,yBAAyB,CA2CrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}