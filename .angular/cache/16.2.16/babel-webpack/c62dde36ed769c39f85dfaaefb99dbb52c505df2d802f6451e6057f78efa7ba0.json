{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let DashboardContactComponent = class DashboardContactComponent {\n  constructor(contactService) {\n    this.contactService = contactService;\n    this.page = 1;\n    this.itemsPerPage = 5;\n    this.allContact = [];\n    this.selectedContact = null;\n  }\n  ngOnInit() {\n    this.getAllContact();\n  }\n  // ********************************************************************** Display Fournisseur **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: response => {\n        this.allContact = response;\n      }\n    });\n  }\n  //  ********************************************************************** Pagination **********************************************************************\n  get paginatedContacts() {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allContact.slice(startIndex, endIndex);\n  }\n  get totalPages() {\n    return Math.ceil(this.allContact.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled() {\n    return this.page === 1;\n  }\n  get isNextPageDisabled() {\n    return this.page === this.totalPages;\n  }\n  goToNextPage() {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage() {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n};\nDashboardContactComponent = __decorate([Component({\n  selector: 'app-dashboard-contact',\n  templateUrl: './dashboard-contact.component.html',\n  styleUrls: ['./dashboard-contact.component.css']\n})], DashboardContactComponent);","map":{"version":3,"names":["Component","DashboardContactComponent","constructor","contactService","page","itemsPerPage","allContact","selectedContact","ngOnInit","getAllContact","AllContact","subscribe","next","response","paginatedContacts","startIndex","endIndex","slice","totalPages","Math","ceil","length","isPreviousPageDisabled","isNextPageDisabled","goToNextPage","goToPreviousPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\dashboard\\dashboard-contact\\dashboard-contact.component.ts"],"sourcesContent":["import { ContactService } from './../../../services/Contact/contact.service';\nimport { Component, OnInit } from '@angular/core';\nimport { Contact } from 'src/app/models/Contact';\n\n@Component({\n  selector: 'app-dashboard-contact',\n  templateUrl: './dashboard-contact.component.html',\n  styleUrls: ['./dashboard-contact.component.css']\n})\nexport class DashboardContactComponent implements OnInit{\n  page: number = 1;\n  itemsPerPage: number = 5;\n  allContact: Contact[] = [];\n  selectedContact:Contact | null = null;\n\n\n  constructor(private contactService: ContactService){}\n  \n  ngOnInit(): void {\n    this.getAllContact();\n  }\n\n// ********************************************************************** Display Fournisseur **********************************************************************\n  getAllContact() {\n    this.contactService.AllContact().subscribe({\n      next: (response)=>{\n        this.allContact = response;\n      },\n    })\n  }\n\n//  ********************************************************************** Pagination **********************************************************************\n  get paginatedContacts(): Contact[] {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allContact.slice(startIndex, endIndex);\n  }\n  get totalPages(): number {\n    return Math.ceil(this.allContact.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled(): boolean {\n    return this.page === 1;\n  }\n  get isNextPageDisabled(): boolean {\n    return this.page === this.totalPages;\n  }\n  goToNextPage(): void {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage(): void {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n}\n"],"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAQ1C,WAAMC,yBAAyB,GAA/B,MAAMA,yBAAyB;EAOpCC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IANlC,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,YAAY,GAAW,CAAC;IACxB,KAAAC,UAAU,GAAc,EAAE;IAC1B,KAAAC,eAAe,GAAkB,IAAI;EAGe;EAEpDC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEF;EACEA,aAAaA,CAAA;IACX,IAAI,CAACN,cAAc,CAACO,UAAU,EAAE,CAACC,SAAS,CAAC;MACzCC,IAAI,EAAGC,QAAQ,IAAG;QAChB,IAAI,CAACP,UAAU,GAAGO,QAAQ;MAC5B;KACD,CAAC;EACJ;EAEF;EACE,IAAIC,iBAAiBA,CAAA;IACnB,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACX,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,YAAY;IACtD,MAAMW,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACV,YAAY;IAC/C,OAAO,IAAI,CAACC,UAAU,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EACpD;EACA,IAAIE,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACd,UAAU,CAACe,MAAM,GAAG,IAAI,CAAChB,YAAY,CAAC;EAC9D;EACA,IAAIiB,sBAAsBA,CAAA;IACxB,OAAO,IAAI,CAAClB,IAAI,KAAK,CAAC;EACxB;EACA,IAAImB,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAACnB,IAAI,KAAK,IAAI,CAACc,UAAU;EACtC;EACAM,YAAYA,CAAA;IACV,IAAI,IAAI,CAACpB,IAAI,GAAG,IAAI,CAACc,UAAU,EAAE;MAC/B,IAAI,CAACd,IAAI,EAAE;;EAEf;EACAqB,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACrB,IAAI,GAAG,CAAC,EAAE;MACjB,IAAI,CAACA,IAAI,EAAE;;EAEf;CACD;AA/CYH,yBAAyB,GAAAyB,UAAA,EALrC1B,SAAS,CAAC;EACT2B,QAAQ,EAAE,uBAAuB;EACjCC,WAAW,EAAE,oCAAoC;EACjDC,SAAS,EAAE,CAAC,mCAAmC;CAChD,CAAC,C,EACW5B,yBAAyB,CA+CrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}