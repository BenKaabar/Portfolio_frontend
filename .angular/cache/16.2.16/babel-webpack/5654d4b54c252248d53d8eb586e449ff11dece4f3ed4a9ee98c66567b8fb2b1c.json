{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CommonModule } from '@angular/common';\nimport { HttpInterceptorInterceptor } from './interceptor/http-interceptor.interceptor';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngx-translate/core\";\nexport function HttpLoaderFactory(http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static {\n      this.ɵfac = function AppModule_Factory(t) {\n        return new (t || AppModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppModule,\n        bootstrap: [AppComponent]\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        providers: [{\n          provide: HTTP_INTERCEPTORS,\n          useClass: HttpInterceptorInterceptor,\n          multi: true\n        }],\n        imports: [BrowserModule, AppRoutingModule, ReactiveFormsModule, HttpClientModule, CommonModule, TranslateModule.forRoot({\n          defaultLanguage: 'en',\n          useDefaultLang: true,\n          loader: {\n            provide: TranslateLoader,\n            useFactory: HttpLoaderFactory,\n            deps: [HttpClient]\n          }\n        })]\n      });\n    }\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}