{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./../services/auth/auth.service\";\nexport class HttpInterceptorInterceptor {\n  constructor(authService) {\n    this.authService = authService;\n  }\n  intercept(request, next) {\n    if (!request.url.includes(\"/auth/login\") && !request.url.includes(\"/Contact/CreateContact\") && !request.url.includes(\"/Home/AllHome\") && !request.url.includes(\"/ResumeEducation/AllResumeEducation\") && !request.url.includes(\"/ResumeExperience/AllResumeExperience\") && !request.url.includes(\"/ResumeSkills/AllResumeSkills\") && !request.url.includes(\"/Service/AllServices\") && !request.url.includes(\"/Work/AllWork\") && !request.url.includes(\"/Home/UpdatedHome\")) {\n      let newRequest = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + localStorage.getItem('accestoken'))\n      });\n      return next.handle(newRequest);\n    } else return next.handle(request);\n  }\n  static {\n    this.ɵfac = function HttpInterceptorInterceptor_Factory(t) {\n      return new (t || HttpInterceptorInterceptor)(i0.ɵɵinject(i1.AuthService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: HttpInterceptorInterceptor,\n      factory: HttpInterceptorInterceptor.ɵfac\n    });\n  }\n}","map":{"version":3,"names":["HttpInterceptorInterceptor","constructor","authService","intercept","request","next","url","includes","newRequest","clone","headers","set","localStorage","getItem","handle","i0","ɵɵinject","i1","AuthService","factory","ɵfac"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\interceptor\\http-interceptor.interceptor.ts"],"sourcesContent":["import { AuthService } from './../services/auth/auth.service';\nimport { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class HttpInterceptorInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    if (!request.url.includes(\"/auth/login\")\n    &&!request.url.includes(\"/Contact/CreateContact\")\n    &&!request.url.includes(\"/Home/AllHome\")\n    &&!request.url.includes(\"/ResumeEducation/AllResumeEducation\")\n    &&!request.url.includes(\"/ResumeExperience/AllResumeExperience\")\n    &&!request.url.includes(\"/ResumeSkills/AllResumeSkills\")\n    &&!request.url.includes(\"/Service/AllServices\")\n    &&!request.url.includes(\"/Work/AllWork\")\n    &&!request.url.includes(\"/Home/UpdatedHome\")\n    ) {\n      let newRequest = request.clone({\n        headers: request.headers.set('Authorization', 'Bearer ' + localStorage.getItem('accestoken'))\n      })\n      return next.handle(newRequest);\n    } else\n      return next.handle(request);\n\n  }\n}\n// .requestMatchers(\"/auth/login\").permitAll()\n// .requestMatchers(\"/Contact/CreateContact/**\").permitAll()\n// .requestMatchers(\"/Home/AllHome/**\").permitAll()\n// .requestMatchers(\"/ResumeEducation/AllResumeEducation/**\").permitAll()\n// .requestMatchers(\"/ResumeExperience/AllResumeExperience/**\").permitAll()\n// .requestMatchers(\"/ResumeSkills/AllResumeSkills/**\").permitAll()\n// .requestMatchers(\"/Service/AllServices/**\").permitAll()\n// .requestMatchers(\"/Work/AllWork/**\").permitAll()\n// .requestMatchers(\"/Home/UpdatedHome/**\").permitAll())"],"mappings":";;AAWA,OAAM,MAAOA,0BAA0B;EAErCC,YAAoBC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAE/CC,SAASA,CAACC,OAA6B,EAAEC,IAAiB;IACxD,IAAI,CAACD,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,aAAa,CAAC,IACtC,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,wBAAwB,CAAC,IAC/C,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,eAAe,CAAC,IACtC,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,qCAAqC,CAAC,IAC5D,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,uCAAuC,CAAC,IAC9D,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,+BAA+B,CAAC,IACtD,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,sBAAsB,CAAC,IAC7C,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,eAAe,CAAC,IACtC,CAACH,OAAO,CAACE,GAAG,CAACC,QAAQ,CAAC,mBAAmB,CAAC,EAC1C;MACA,IAAIC,UAAU,GAAGJ,OAAO,CAACK,KAAK,CAAC;QAC7BC,OAAO,EAAEN,OAAO,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;OAC7F,CAAC;MACF,OAAOR,IAAI,CAACS,MAAM,CAACN,UAAU,CAAC;KAC/B,MACC,OAAOH,IAAI,CAACS,MAAM,CAACV,OAAO,CAAC;EAE/B;;;uBAtBWJ,0BAA0B,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;aAA1BlB,0BAA0B;MAAAmB,OAAA,EAA1BnB,0BAA0B,CAAAoB;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}