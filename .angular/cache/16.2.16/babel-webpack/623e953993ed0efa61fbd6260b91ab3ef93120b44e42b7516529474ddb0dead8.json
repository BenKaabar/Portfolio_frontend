{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let DashboardWorkComponent = class DashboardWorkComponent {\n  constructor(WorkService, formBuilder) {\n    this.WorkService = WorkService;\n    this.formBuilder = formBuilder;\n    this.page = 1;\n    this.itemsPerPage = 5;\n    this.allWork = [];\n    this.selectedWork = null;\n    this.isConsultModalOpen = false;\n    this.isCreateModalOpen = false;\n    this.selectedFile = null;\n  }\n  ngOnInit() {\n    this.getAllWork();\n    this.initializeCreateWorkform();\n  }\n  // ********************************************************************** Display Fournisseur **********************************************************************\n  getAllWork() {\n    this.WorkService.AllWorks().subscribe({\n      next: response => {\n        this.allWork = response;\n      }\n    });\n  }\n  //  ********************************************************************** Consulting **********************************************************************\n  openConsultModal(Work) {\n    console.log(Work);\n    this.selectedWork = Work;\n    this.isConsultModalOpen = true;\n  }\n  closeConsultModal() {\n    this.isConsultModalOpen = false;\n  }\n  //  ********************************************************************** delete **********************************************************************\n  toDelete(idWork) {\n    this.WorkService.deleteWork(idWork).subscribe({\n      next: response => {\n        this.allWork = this.allWork.filter(Work => Work.idWork !== idWork);\n        this.getAllWork();\n      }\n    });\n  }\n  //  ********************************************************************** Create **********************************************************************\n  initializeCreateWorkform() {\n    this.CreateWorkform = this.formBuilder.group({\n      projectType: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      shortDescription: ['', [Validators.required]],\n      longDescription: ['', [Validators.required]],\n      mainTechnology: ['', [Validators.required]],\n      allTechnology: ['', [Validators.required]],\n      github: ['', [Validators.required]],\n      video: ['', [Validators.required]],\n      filephotoWork: [null, [Validators.required]]\n    });\n  }\n  openCreateModal() {\n    this.isCreateModalOpen = true;\n  }\n  closeCreateModal() {\n    this.isCreateModalOpen = false;\n  }\n  CreateWork() {\n    if (this.CreateWorkform.valid) {\n      const formData = new FormData();\n      formData.append('workRequestDTO', JSON.stringify({\n        projectType: this.CreateWorkform.value.projectType,\n        title: this.CreateWorkform.value.title,\n        shortDescription: this.CreateWorkform.value.shortDescription,\n        longDescription: this.CreateWorkform.value.longDescription,\n        mainTechnology: this.CreateWorkform.value.mainTechnology,\n        allTechnology: this.CreateWorkform.value.allTechnology,\n        github: this.CreateWorkform.value.github,\n        video: this.CreateWorkform.value.video\n      }));\n      if (this.selectedFile && this.selectedFile instanceof File) {\n        formData.append('photoWork', this.selectedFile, this.selectedFile.name);\n      }\n      this.WorkService.CreateWork(formData).subscribe({\n        next: response => {\n          this.closeCreateModal();\n          this.CreateWorkform.reset();\n          this.getAllWork();\n          console.log(response);\n        },\n        error: error => {\n          console.error(error.error);\n        }\n      });\n    } else {\n      console.log('Formulaire invalide');\n    }\n  }\n  //    projectType:string;\n  // title:string;\n  // shortDescription:string;\n  // longDescription:string;\n  // mainTechnology:string;\n  // allTechnology:string;\n  // github:string;\n  // video:string;\n  // namephotoWork:string;\n  // typephotoWork:string;\n  // filephotoWork: Uint8Array;\n  //  ********************************************************************** file **********************************************************************\n  onFileChange(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        if (e.target?.result) {\n          this.selectedUrlFile = e.target.result;\n        }\n      };\n      reader.readAsDataURL(file);\n      this.CreateWorkform.patchValue({\n        file: file\n      });\n      this.selectedFile = file;\n    } else {\n      console.error(\"Aucun fichier sélectionné ou fichier invalide\");\n    }\n  }\n  //  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks() {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWork.slice(startIndex, endIndex);\n  }\n  get totalPages() {\n    return Math.ceil(this.allWork.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled() {\n    return this.page === 1;\n  }\n  get isNextPageDisabled() {\n    return this.page === this.totalPages;\n  }\n  goToNextPage() {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage() {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n};\nDashboardWorkComponent = __decorate([Component({\n  selector: 'app-dashboard-work',\n  templateUrl: './dashboard-work.component.html',\n  styleUrls: ['./dashboard-work.component.css']\n})], DashboardWorkComponent);","map":{"version":3,"names":["Component","Validators","DashboardWorkComponent","constructor","WorkService","formBuilder","page","itemsPerPage","allWork","selectedWork","isConsultModalOpen","isCreateModalOpen","selectedFile","ngOnInit","getAllWork","initializeCreateWorkform","AllWorks","subscribe","next","response","openConsultModal","Work","console","log","closeConsultModal","toDelete","idWork","deleteWork","filter","CreateWorkform","group","projectType","required","title","shortDescription","longDescription","mainTechnology","allTechnology","github","video","filephotoWork","openCreateModal","closeCreateModal","CreateWork","valid","formData","FormData","append","JSON","stringify","value","File","name","reset","error","onFileChange","event","file","target","files","reader","FileReader","onload","e","result","selectedUrlFile","readAsDataURL","patchValue","paginatedWorks","startIndex","endIndex","slice","totalPages","Math","ceil","length","isPreviousPageDisabled","isNextPageDisabled","goToNextPage","goToPreviousPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\dashboard\\dashboard-work\\dashboard-work.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Work } from 'src/app/models/work';\nimport { WorkService } from './../../../services/Work/work.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-dashboard-work',\n  templateUrl: './dashboard-work.component.html',\n  styleUrls: ['./dashboard-work.component.css']\n})\nexport class DashboardWorkComponent  implements OnInit{\n  page: number = 1;\n  itemsPerPage: number = 5;\n  allWork: Work[] = [];\n  selectedWork:Work | null = null;\n  isConsultModalOpen = false;\n  isCreateModalOpen =false;\n  CreateWorkform!: FormGroup;\n  selectedFile: File | null = null;\n  selectedUrlFile: any;\n\n  constructor(private WorkService: WorkService,\n     private formBuilder: FormBuilder){}\n  \n  ngOnInit(): void {\n    this.getAllWork();\n    this.initializeCreateWorkform();\n  }\n\n// ********************************************************************** Display Fournisseur **********************************************************************\n  getAllWork() {\n    this.WorkService.AllWorks().subscribe({\n      next: (response)=>{\n        this.allWork = response;\n      },\n    })\n  }\n\n//  ********************************************************************** Consulting **********************************************************************\n  openConsultModal(Work: Work) {\n    console.log(Work)\n    this.selectedWork = Work;\n    this.isConsultModalOpen = true;\n  }\n\n  closeConsultModal() {\n    this.isConsultModalOpen = false;\n  }\n\n//  ********************************************************************** delete **********************************************************************\n  toDelete(idWork: string): void{\n    this.WorkService.deleteWork(idWork).subscribe({\n      next:(response)=>{\n        this.allWork = this.allWork.filter(Work => Work.idWork !== idWork);\n        this.getAllWork();\n      },\n    });\n  }\n  \n//  ********************************************************************** Create **********************************************************************\n  initializeCreateWorkform(): void {\n    this.CreateWorkform = this.formBuilder.group({\n      projectType: ['', [Validators.required]],\n      title: ['', [Validators.required]],\n      shortDescription: ['', [Validators.required]],\n      longDescription: ['', [Validators.required]],\n      mainTechnology: ['', [Validators.required]],\n      allTechnology: ['', [Validators.required]],\n      github: ['', [Validators.required]],\n      video: ['', [Validators.required]],\n      filephotoWork: [null, [Validators.required]]\n    });\n  }\n  openCreateModal() {\n    this.isCreateModalOpen = true;\n  }\n  closeCreateModal() {\n    this.isCreateModalOpen = false;\n  }\n  CreateWork(){\n    if (this.CreateWorkform.valid) {\n      const formData = new FormData();\n      formData.append('workRequestDTO', JSON.stringify({\n        projectType: this.CreateWorkform.value.projectType,\n        title: this.CreateWorkform.value.title,\n        shortDescription: this.CreateWorkform.value.shortDescription,\n        longDescription: this.CreateWorkform.value.longDescription,\n        mainTechnology: this.CreateWorkform.value.mainTechnology,\n        allTechnology: this.CreateWorkform.value.allTechnology,\n        github: this.CreateWorkform.value.github,\n        video: this.CreateWorkform.value.video,\n      }));\n      if (this.selectedFile && this.selectedFile instanceof File) {\n        formData.append('photoWork', this.selectedFile, this.selectedFile.name);\n      }\n      this.WorkService.CreateWork(formData).subscribe({\n        next: (response) => {\n          this.closeCreateModal();\n          this.CreateWorkform.reset();\n          this.getAllWork();\n          console.log(response);\n        },\n        error:(error) => {\n          console.error(error.error);\n        }        \n      })\n    }else {\n      console.log('Formulaire invalide');\n    }\n  }    \n//    projectType:string;\n// title:string;\n// shortDescription:string;\n// longDescription:string;\n// mainTechnology:string;\n// allTechnology:string;\n// github:string;\n// video:string;\n// namephotoWork:string;\n// typephotoWork:string;\n// filephotoWork: Uint8Array;\n//  ********************************************************************** file **********************************************************************\n onFileChange(event: any): void {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        if (e.target?.result) {\n          this.selectedUrlFile = e.target.result;\n        }\n      };\n      reader.readAsDataURL(file);\n      this.CreateWorkform.patchValue({ file: file });\n      this.selectedFile = file;\n    } else {\n      console.error(\"Aucun fichier sélectionné ou fichier invalide\");\n    }\n  }\n  \n//  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks(): Work[] {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWork.slice(startIndex, endIndex);\n  }\n  get totalPages(): number {\n    return Math.ceil(this.allWork.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled(): boolean {\n    return this.page === 1;\n  }\n  get isNextPageDisabled(): boolean {\n    return this.page === this.totalPages;\n  }\n  goToNextPage(): void {\n    if (this.page < this.totalPages) {\n      this.page++;\n    }\n  }\n  goToPreviousPage(): void {\n    if (this.page > 1) {\n      this.page--;\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}