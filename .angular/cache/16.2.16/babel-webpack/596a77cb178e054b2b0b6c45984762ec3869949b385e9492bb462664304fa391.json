{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { jwtDecode } from 'jwt-decode';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport let AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      // private apiUrl = 'http://localhost:2603/auth';\n      this.apiUrl = environment.apiUrl + \"/Auth\";\n      this.isAuthenticated = false;\n    }\n    Login(username, password) {\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/x-www-form-urlencoded'\n      });\n      const body = new HttpParams().set('username', username).set('password', password).toString();\n      return this.http.post(`${this.apiUrl}/login`, body, {\n        headers\n      });\n    }\n    isLoggedIn() {\n      const token = localStorage.getItem(\"jwt-token\");\n      return !!token;\n    }\n    LoadProfile(data) {\n      this.isAuthenticated = true;\n      this.accessToken = data['access-token'];\n      let decodedJwt = jwtDecode(this.accessToken);\n      this.username = decodedJwt.sub;\n      this.roles = decodedJwt.scope;\n      window.localStorage.setItem(\"jwt-token\", this.accessToken);\n    }\n    Logout() {\n      this.isAuthenticated = false;\n      this.accessToken = undefined;\n      this.username = undefined;\n      this.roles = undefined;\n      localStorage.removeItem(\"jwt-token\");\n    }\n    loadJwtTokenFromLocalStorage() {\n      let token = window.localStorage.getItem(\"jwt-token\");\n      if (token) {\n        this.LoadProfile({\n          \"access-token\": token\n        });\n      }\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}