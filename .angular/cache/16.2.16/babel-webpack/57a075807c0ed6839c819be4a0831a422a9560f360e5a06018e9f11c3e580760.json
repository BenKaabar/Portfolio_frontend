{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class LanguageService {\n  constructor() {\n    this.languageSubject = new BehaviorSubject('en');\n    this.currentLanguage$ = this.languageSubject.asObservable();\n  }\n  setLanguage(language) {\n    this.languageSubject.next(language);\n    console.log(language);\n  }\n  getLanguage() {\n    return this.languageSubject.value;\n  }\n  static {\n    this.ɵfac = function LanguageService_Factory(t) {\n      return new (t || LanguageService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LanguageService,\n      factory: LanguageService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","LanguageService","constructor","languageSubject","currentLanguage$","asObservable","setLanguage","language","next","console","log","getLanguage","value","factory","ɵfac","providedIn"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\services\\Language\\language.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private languageSubject = new BehaviorSubject<string>('en'); \n  currentLanguage$ = this.languageSubject.asObservable();\n\n  setLanguage(language: string) {\n    this.languageSubject.next(language);\n    console.log(language);\n  }\n\n  getLanguage(): string {\n    return this.languageSubject.value;\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,eAAe;EAH5BC,YAAA;IAIU,KAAAC,eAAe,GAAG,IAAIH,eAAe,CAAS,IAAI,CAAC;IAC3D,KAAAI,gBAAgB,GAAG,IAAI,CAACD,eAAe,CAACE,YAAY,EAAE;;EAEtDC,WAAWA,CAACC,QAAgB;IAC1B,IAAI,CAACJ,eAAe,CAACK,IAAI,CAACD,QAAQ,CAAC;IACnCE,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;EACvB;EAEAI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACR,eAAe,CAACS,KAAK;EACnC;;;uBAXWX,eAAe;IAAA;EAAA;;;aAAfA,eAAe;MAAAY,OAAA,EAAfZ,eAAe,CAAAa,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}