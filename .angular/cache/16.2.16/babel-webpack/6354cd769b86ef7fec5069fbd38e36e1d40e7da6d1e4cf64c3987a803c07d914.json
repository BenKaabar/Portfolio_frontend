{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let WorkComponent = class WorkComponent {\n  constructor(workService, sanitizer) {\n    this.workService = workService;\n    this.sanitizer = sanitizer;\n    this.allWorks = [];\n    this.selectedWork = null;\n    this.page = 1;\n    this.itemsPerPage = 1;\n  }\n  ngOnInit() {\n    this.getallWorks();\n  }\n  // ********************************************************************** Display Work **********************************************************************\n  getallWorks() {\n    this.workService.AllWorks().subscribe({\n      next: response => {\n        this.allWorks = response.map(work => ({\n          ...work,\n          safeVideoUrl: this.sanitizer.bypassSecurityTrustResourceUrl(work.video)\n        }));\n      }\n    });\n  }\n  //  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks() {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWorks.slice(startIndex, endIndex);\n  }\n  get totalPages() {\n    return Math.ceil(this.allWorks.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled() {\n    return this.page === 1;\n  }\n  get isNextPageDisabled() {\n    return this.page === this.totalPages;\n  }\n  goToNextPage() {\n    this.page++;\n  }\n  goToPreviousPage() {\n    this.page--;\n  }\n};\nWorkComponent = __decorate([Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})], WorkComponent);","map":{"version":3,"names":["Component","WorkComponent","constructor","workService","sanitizer","allWorks","selectedWork","page","itemsPerPage","ngOnInit","getallWorks","AllWorks","subscribe","next","response","map","work","safeVideoUrl","bypassSecurityTrustResourceUrl","video","paginatedWorks","startIndex","endIndex","slice","totalPages","Math","ceil","length","isPreviousPageDisabled","isNextPageDisabled","goToNextPage","goToPreviousPage","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\components\\work\\work.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Work } from 'src/app/models/work';\nimport { WorkService } from 'src/app/services/Work/work.service';\n\n@Component({\n  selector: 'app-work',\n  templateUrl: './work.component.html',\n  styleUrls: ['./work.component.css']\n})\nexport class WorkComponent implements OnInit{\n  allWorks: Work[] = [];\n  selectedWork: Work | null = null;\n  page: number = 1;\n  itemsPerPage: number = 1;\n\n  constructor(private workService: WorkService, private sanitizer: DomSanitizer){ }\n\n  ngOnInit(): void {\n    this.getallWorks();\n  }\n\n// ********************************************************************** Display Work **********************************************************************\n  getallWorks() {\n    this.workService.AllWorks().subscribe({\n      next: (response) => {\n        this.allWorks = response.map(work => ({\n          ...work,\n          safeVideoUrl: this.sanitizer.bypassSecurityTrustResourceUrl(work.video)\n        }));\n      }\n    });\n  }\n\n//  ********************************************************************** Pagination **********************************************************************\n  get paginatedWorks(): Work[] {\n    const startIndex = (this.page - 1) * this.itemsPerPage;\n    const endIndex = startIndex + this.itemsPerPage;\n    return this.allWorks.slice(startIndex, endIndex);\n  }\n  get totalPages(): number {\n    return Math.ceil(this.allWorks.length / this.itemsPerPage);\n  }\n  get isPreviousPageDisabled(): boolean {\n    return this.page === 1;\n  }\n  get isNextPageDisabled(): boolean {\n    return this.page === this.totalPages;\n  }\n  goToNextPage(): void {\n      this.page++;\n  }\n  goToPreviousPage(): void {\n      this.page--;\n  }\n  \n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAMxBC,YAAoBC,WAAwB,EAAUC,SAAuB;IAAzD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,SAAS,GAATA,SAAS;IAL/D,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,YAAY,GAAgB,IAAI;IAChC,KAAAC,IAAI,GAAW,CAAC;IAChB,KAAAC,YAAY,GAAW,CAAC;EAEwD;EAEhFC,QAAQA,CAAA;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEF;EACEA,WAAWA,CAAA;IACT,IAAI,CAACP,WAAW,CAACQ,QAAQ,EAAE,CAACC,SAAS,CAAC;MACpCC,IAAI,EAAGC,QAAQ,IAAI;QACjB,IAAI,CAACT,QAAQ,GAAGS,QAAQ,CAACC,GAAG,CAACC,IAAI,KAAK;UACpC,GAAGA,IAAI;UACPC,YAAY,EAAE,IAAI,CAACb,SAAS,CAACc,8BAA8B,CAACF,IAAI,CAACG,KAAK;SACvE,CAAC,CAAC;MACL;KACD,CAAC;EACJ;EAEF;EACE,IAAIC,cAAcA,CAAA;IAChB,MAAMC,UAAU,GAAG,CAAC,IAAI,CAACd,IAAI,GAAG,CAAC,IAAI,IAAI,CAACC,YAAY;IACtD,MAAMc,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACb,YAAY;IAC/C,OAAO,IAAI,CAACH,QAAQ,CAACkB,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC;EAClD;EACA,IAAIE,UAAUA,CAAA;IACZ,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACrB,QAAQ,CAACsB,MAAM,GAAG,IAAI,CAACnB,YAAY,CAAC;EAC5D;EACA,IAAIoB,sBAAsBA,CAAA;IACxB,OAAO,IAAI,CAACrB,IAAI,KAAK,CAAC;EACxB;EACA,IAAIsB,kBAAkBA,CAAA;IACpB,OAAO,IAAI,CAACtB,IAAI,KAAK,IAAI,CAACiB,UAAU;EACtC;EACAM,YAAYA,CAAA;IACR,IAAI,CAACvB,IAAI,EAAE;EACf;EACAwB,gBAAgBA,CAAA;IACZ,IAAI,CAACxB,IAAI,EAAE;EACf;CAED;AA9CYN,aAAa,GAAA+B,UAAA,EALzBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWlC,aAAa,CA8CzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}