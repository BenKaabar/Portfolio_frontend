{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, HostListener } from '@angular/core';\nexport let NavbarComponent = class NavbarComponent {\n  constructor(translate, languageService) {\n    this.translate = translate;\n    this.languageService = languageService;\n    this.isNavbarCollapsed = true;\n    this.isSidebarVisible = false;\n    this.isDarkMode = false;\n    this.currentLanguage = 'En';\n    this.currentFlag = 'assets/images/gb.png';\n    this.dropdownOpen = false;\n    const storedDarkMode = localStorage.getItem('darkMode');\n    this.isDarkMode = storedDarkMode === 'true';\n    this.applyDarkMode();\n  }\n  ngOnInit() {\n    this.checkScreenSize();\n  }\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n  switchLanguage(language, flag) {\n    this.currentLanguage = language === 'en' ? 'En' : language === 'fr' ? 'Fr' : 'De';\n    this.currentFlag = flag;\n    this.translate.use(language);\n    this.dropdownOpen = false;\n  }\n  onResize() {\n    this.checkScreenSize();\n  }\n  toggleSidebar() {\n    this.isSidebarVisible = !this.isSidebarVisible;\n  }\n  checkScreenSize() {\n    this.isNavbarCollapsed = window.innerWidth <= 575;\n  }\n  applyDarkMode() {\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode.toString());\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n};\n__decorate([HostListener('window:resize', ['$event'])], NavbarComponent.prototype, \"onResize\", null);\nNavbarComponent = __decorate([Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})], NavbarComponent);","map":{"version":3,"names":["Component","HostListener","NavbarComponent","constructor","translate","languageService","isNavbarCollapsed","isSidebarVisible","isDarkMode","currentLanguage","currentFlag","dropdownOpen","storedDarkMode","localStorage","getItem","applyDarkMode","ngOnInit","checkScreenSize","toggleDropdown","switchLanguage","language","flag","use","onResize","toggleSidebar","window","innerWidth","document","body","classList","add","remove","toggleDarkMode","setItem","toString","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\achra\\OneDrive\\Bureau\\Portfolio\\frontend\\Portfolio\\src\\app\\shared\\navbar\\navbar.component.ts"],"sourcesContent":["import { Component, HostListener, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit{\n  isNavbarCollapsed: boolean = true;\n  isSidebarVisible : boolean = false;\n  isDarkMode = false;  \n  currentLanguage = 'En';\n  currentFlag = 'assets/images/gb.png';\n  dropdownOpen = false;\n\n  constructor(private translate: TranslateService, private languageService: LanguageService) {\n    const storedDarkMode = localStorage.getItem('darkMode');\n    this.isDarkMode = storedDarkMode === 'true';\n    this.applyDarkMode();\n  }\n\n  ngOnInit() {\n    this.checkScreenSize();\n  }\n  toggleDropdown() {\n    this.dropdownOpen = !this.dropdownOpen;\n  }\n  switchLanguage(language: string, flag: string) {\n    this.currentLanguage = language === 'en' ? 'En' : language === 'fr' ? 'Fr' : 'De';\n    this.currentFlag = flag;\n    this.translate.use(language);\n    this.dropdownOpen = false;\n  }  \n  @HostListener('window:resize', ['$event'])\n  onResize() { \n    this.checkScreenSize();\n  }\n  toggleSidebar(){\n    this.isSidebarVisible  = !this.isSidebarVisible ;\n  } \n  checkScreenSize() {\n    this.isNavbarCollapsed = window.innerWidth <= 575;\n  }\n  applyDarkMode() {\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n  toggleDarkMode() {\n    this.isDarkMode = !this.isDarkMode;\n    localStorage.setItem('darkMode', this.isDarkMode.toString());\n    if (this.isDarkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,YAAY,QAAgB,eAAe;AAQxD,WAAMC,eAAe,GAArB,MAAMA,eAAe;EAQ1BC,YAAoBC,SAA2B,EAAUC,eAAgC;IAArE,KAAAD,SAAS,GAATA,SAAS;IAA4B,KAAAC,eAAe,GAAfA,eAAe;IAPxE,KAAAC,iBAAiB,GAAY,IAAI;IACjC,KAAAC,gBAAgB,GAAa,KAAK;IAClC,KAAAC,UAAU,GAAG,KAAK;IAClB,KAAAC,eAAe,GAAG,IAAI;IACtB,KAAAC,WAAW,GAAG,sBAAsB;IACpC,KAAAC,YAAY,GAAG,KAAK;IAGlB,MAAMC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACvD,IAAI,CAACN,UAAU,GAAGI,cAAc,KAAK,MAAM;IAC3C,IAAI,CAACG,aAAa,EAAE;EACtB;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;EACxB;EACAC,cAAcA,CAAA;IACZ,IAAI,CAACP,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EACAQ,cAAcA,CAACC,QAAgB,EAAEC,IAAY;IAC3C,IAAI,CAACZ,eAAe,GAAGW,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAGA,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,IAAI;IACjF,IAAI,CAACV,WAAW,GAAGW,IAAI;IACvB,IAAI,CAACjB,SAAS,CAACkB,GAAG,CAACF,QAAQ,CAAC;IAC5B,IAAI,CAACT,YAAY,GAAG,KAAK;EAC3B;EAEAY,QAAQA,CAAA;IACN,IAAI,CAACN,eAAe,EAAE;EACxB;EACAO,aAAaA,CAAA;IACX,IAAI,CAACjB,gBAAgB,GAAI,CAAC,IAAI,CAACA,gBAAgB;EACjD;EACAU,eAAeA,CAAA;IACb,IAAI,CAACX,iBAAiB,GAAGmB,MAAM,CAACC,UAAU,IAAI,GAAG;EACnD;EACAX,aAAaA,CAAA;IACX,IAAI,IAAI,CAACP,UAAU,EAAE;MACnBmB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;KACzC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;EAE/C;EACAC,cAAcA,CAAA;IACZ,IAAI,CAACxB,UAAU,GAAG,CAAC,IAAI,CAACA,UAAU;IAClCK,YAAY,CAACoB,OAAO,CAAC,UAAU,EAAE,IAAI,CAACzB,UAAU,CAAC0B,QAAQ,EAAE,CAAC;IAC5D,IAAI,IAAI,CAAC1B,UAAU,EAAE;MACnBmB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;KACzC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;;EAE/C;CAED;AA1BCI,UAAA,EADClC,YAAY,CAAC,eAAe,EAAE,CAAC,QAAQ,CAAC,CAAC,C,8CAGzC;AA7BUC,eAAe,GAAAiC,UAAA,EAL3BnC,SAAS,CAAC;EACToC,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE,yBAAyB;EACtCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWpC,eAAe,CAqD3B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}